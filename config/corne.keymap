/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        tp: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        ce: ce {
            compatible = "zmk,behavior-tap-dance";
            label = "CE";
            #binding-cells = <0>;
            bindings = <&kp LEFT_GUI>, <&kp LG(ENTER)>;
        };

        bspc: bspc {
            compatible = "zmk,behavior-mod-morph";
            label = "BSPC";
            bindings = <&kp BACKSPACE>, <&kp LA(BACKSPACE)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_right {
            bindings = <&wr>;
            key-positions = <38 19 39>;
        };

        combo_left {
            bindings = <&wl>;
            key-positions = <38 39 16>;
        };

        combo_pwd {
            bindings = <&pwd>;
            key-positions = <12 23>;
        };

        combo_bootleft {
            bindings = <&bootloader>;
            key-positions = <12 36>;
        };

        combo_bootloaderright {
            bindings = <&bootloader>;
            key-positions = <41 23>;
        };

        combo_email {
            bindings = <&email>;
            key-positions = <24 35>;
        };

        combo_fullscreen {
            bindings = <&kp LC(LA(ENTER))>;
            key-positions = <38 39 19 16>;
        };

        combo_gadd {
            bindings = <&gadd>;
            key-positions = <15 38>;
        };

        combo_gpush {
            bindings = <&gpush>;
            key-positions = <39 20>;
        };
    };

    macros {
        wl: wl {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LA(LEFT))>;
            label = "WL";
        };

        wr: wr {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LA(RIGHT))>;
            label = "WR";
        };

        pwd: pwd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(F) &kp LS(T) &kp LS(W) &kp N2 &kp N0 &kp N2 &kp N1 &kp DLLR>;
            label = "PWD";
        };

        email: email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp E &kp C &kp A &kp M &kp B &kp R &kp O &kp N &kp E &kp R &kp O &kp S &kp A &kp B &kp A &kp AT &kp N &kp E &kp T &kp F &kp L &kp I &kp X &kp DOT &kp C &kp O &kp M>;
            label = "EMAIL";
        };

        gadd: gadd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp G &kp I &kp T &kp SPACE &kp A &kp D &kp D &kp SPACE &kp DOT &kp SEMI &kp SPACE &kp G &kp I &kp T &kp SPACE &kp C &kp O &kp M &kp M &kp I &kp T &kp SPACE &kp MINUS &kp M &kp SPACE &kp DQT>;
            label = "GADD";
        };

        gpush: gpush {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp DQT &kp SEMI &kp SPACE &kp G &kp I &kp T &kp SPACE &kp P &kp U &kp S &kp H>;
            label = "GPUSH";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | TAB  |  Q  |  W  |  E  |  R  |    T    |   |  Y  |  U   |  I  |  O  |  P  | ESC |
            // | CTRL |  A  |  S  |  D  |  F  |    G    |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |    B    |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
            //                    | GUI | LWR | ALT/ENT |   | HYPER/SPC | BKSP  | RSE |

            bindings = <
&kp TAB         &kp Q  &kp W    &kp F    &kp P                &kp B    &kp J  &kp L      &kp U        &kp Y         &kp SEMICOLON  &kp ESCAPE
&kp LEFT_ALT    &kp A  &kp R    &kp S    &kp T                &kp G    &kp M  &kp N      &kp E        &kp I         &kp O          &kp SINGLE_QUOTE
&kp LEFT_SHIFT  &kp Z  &lt 1 X  &lt 2 C  &lt 3 D              &kp V    &kp K  &lt 3 H    &lt 2 COMMA  &lt 1 PERIOD  &kp FSLH       &kp LEFT_CONTROL
                                &mo 2    &mt LEFT_ALT RETURN  &ce      &bspc  &kp SPACE  &mo 3
            >;

            label = "base";
        };

        nav {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &bt BT_CLR    &trans  &trans    &kp UP    &trans     &kp PAGE_UP    &kp HOME
&to 0   &trans  &trans  &trans  &trans  &bt BT_NXT    &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &kp PAGE_DOWN  &kp END
&trans  &trans  &trans  &trans  &trans  &bt BT_PRV    &trans  &trans    &trans    &trans     &trans         &trans
                        &to 3   &trans  &trans        &trans  &trans    &trans
            >;

            label = "navigation";
        };

        number {
            bindings = <
&kp GRAVE  &kp DEL    &trans     &kp LS(LPAR)  &kp LS(RPAR)  &kp BSLH           &kp FSLH      &kp N7  &kp N8  &kp N9  &kp MINUS     &kp BSPC
&to 0      &kp MINUS  &kp EQUAL  &kp LBKT      &kp RBKT      &kp EXCLAMATION    &kp LS(STAR)  &kp N4  &kp N5  &kp N6  &kp LS(PLUS)  &kp EQUAL
&trans     &kp LG(Z)  &kp LG(X)  &kp LG(C)     &kp LG(V)     &kp LG(S)          &kp COMMA     &kp N1  &kp N2  &kp N3  &kp DOT       &kp RET
                                 &to 3         &trans        &trans             &trans        &trans  &kp N0
            >;

            label = "number";
        };

        adjust {
            bindings = <
&trans  &trans  &kp K_VOL_DN  &kp K_MUTE        &kp K_VOLUME_UP  &trans    &trans  &trans                &trans                 &trans            &trans             &trans
&to 0   &trans  &kp K_PREV    &kp K_PLAY_PAUSE  &kp K_FORWARD    &trans    &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans
&trans  &trans  &trans        &trans            &trans           &trans    &trans  &trans                &trans                 &trans            &trans             &trans
                              &to 0             &trans           &trans    &trans  &trans                &trans
            >;

            label = "adjust";
        };
    };
};
